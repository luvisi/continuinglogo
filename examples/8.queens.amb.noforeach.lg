
to add.option.helper :options :count
    if :options = [] [op fput :new :rest]

    local "first
    make "first first :options
    if :new = :first [fail]
    if :new = :first + :count [fail]
    if :new = :first - :count [fail]
    op add.option.helper bf :options :count+1
end

to add.option :rest
    local "new
    make "new (amb 0 1 2 3 4 5 6 7)
    op add.option.helper :rest 1
end

to 8.queens
    local [l.1 l.2 l.3 l.4 l.5 l.6 l.7 l.8]
    catch "error [
        make "l.1 add.option []
        make "l.2 add.option :l.1
        make "l.3 add.option :l.2
        make "l.4 add.option :l.3
        make "l.5 add.option :l.4
        make "l.6 add.option :l.5
        make "l.7 add.option :l.6
        make "l.8 add.option :l.7
        print reverse :l.8
        fail
    ]
end

8.queens
bye
